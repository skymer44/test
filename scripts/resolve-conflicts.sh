#!/bin/bash

# Script de rÃ©solution intelligente des conflits
# Garde les modifications GitHub pour les donnÃ©es, garde les modifications locales pour la documentation

echo "ðŸ”„ === RÃ‰SOLUTION INTELLIGENTE DES CONFLITS ==="
echo "ðŸ“… $(date +'%Y-%m-%d %H:%M:%S')"

# 1. CrÃ©er une sauvegarde des fichiers de documentation locaux
echo "ðŸ’¾ Sauvegarde des fichiers de documentation..."
mkdir -p temp_docs_backup
cp -f *.md temp_docs_backup/ 2>/dev/null || true
cp -f scripts/sync-and-push-*.sh temp_docs_backup/ 2>/dev/null || true
cp -f scripts/test-env.sh temp_docs_backup/ 2>/dev/null || true

# 2. Reset vers l'Ã©tat GitHub (garde les donnÃ©es Ã  jour)
echo "ðŸ”„ Reset vers l'Ã©tat GitHub (garde les donnÃ©es Notion Ã  jour)..."
git reset --hard origin/main

# 3. Restaurer les fichiers de documentation
echo "ðŸ“š Restauration des fichiers de documentation..."
cp -f temp_docs_backup/*.md . 2>/dev/null || true
cp -f temp_docs_backup/sync-and-push-*.sh scripts/ 2>/dev/null || true
cp -f temp_docs_backup/test-env.sh scripts/ 2>/dev/null || true

# 4. Mettre Ã  jour package.json avec les nouvelles commandes
echo "ðŸ“¦ Mise Ã  jour du package.json..."

# CrÃ©er une version temporaire du package.json avec les nouvelles commandes
cat > package_temp.json << 'EOF'
{
  "name": "programme-musical-2026",
  "version": "1.0.0",
  "description": "Synchronisation Notion pour Programme Musical 2026",
  "main": "scripts/notion-sync.js",
  "scripts": {
    "sync": "node scripts/notion-sync.js",
    "guide": "node scripts/notion-guide.js",
    "test": "node scripts/test-notion.js",
    "test-env": "./scripts/test-env.sh",
    "test-sync": "node test-sync.js",
    "list-db": "node scripts/list-databases.js",
    "update-site": "node scripts/intelligent-update-site.js",
    "full-sync": "npm run sync && npm run update-site",
    "auto-sync": "./scripts/sync-and-push-ultra.sh",
    "auto-sync-fixed": "./scripts/sync-and-push-fixed.sh",
    "auto-sync-old": "./scripts/sync-and-push.sh",
    "start": "python3 -m http.server 8000"
  },
  "dependencies": {
    "@notionhq/client": "^4.0.0"
  },
  "keywords": [
    "notion",
    "music",
    "synchronization",
    "github-actions"
  ],
  "author": "Programme Musical 2026",
  "license": "MIT"
}
EOF

mv package_temp.json package.json

# 5. Rendre les scripts exÃ©cutables
echo "ðŸ”§ Configuration des permissions..."
chmod +x scripts/sync-and-push-*.sh 2>/dev/null || true
chmod +x scripts/test-env.sh 2>/dev/null || true

# 6. Nettoyer
rm -rf temp_docs_backup

echo "âœ… RÃ©solution terminÃ©e !"
echo ""
echo "ðŸ“Š Ã‰tat final :"
echo "âœ… DonnÃ©es Notion : mises Ã  jour depuis GitHub"
echo "âœ… Documentation : conservÃ©e depuis local"
echo "âœ… Scripts : nouveaux scripts ultra-robustes ajoutÃ©s"
echo "âœ… Package.json : mis Ã  jour avec nouvelles commandes"
echo ""
echo "ðŸš€ Vous pouvez maintenant :"
echo "   git add ."
echo "   git commit -m 'ðŸ“š Ajout documentation et scripts ultra-robustes'"
echo "   git push origin main"
echo ""
